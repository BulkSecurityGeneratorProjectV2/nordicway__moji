package it.zielke.moji;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.codec.binary.Hex;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class SocketClientUploadTest extends SocketClientTestBase {

	@Before
	public void setUp() throws Exception {
		super.setUp();
	}

	@After
	public void tearDown() throws Exception {
		super.tearDown();
	}

	@Test
	public void testUploadUKRTestSet() {

		for (ExpectedValues expectedValues : createTestSet()) {
			try {
				socketClient.sendInitialization();
				socketClient.sendLanguage();
				mockServer.setExpectedBytes(Hex.decodeHex(expectedValues
						.getBytesHex().toCharArray()));
				socketClient.uploadFile(expectedValues.getFile());
				while (mockServer.getLastFileReceived() == null
						|| !mockServer.getLastFileReceived().equals(
								socketClient.normalizeFilename(expectedValues
										.getFile().getAbsolutePath()))) {
					Thread.sleep(10);
				}
				assertEquals(expectedValues.getBytesHex(), String.valueOf(Hex
						.encodeHex(mockServer.getReceivedBytes().array())));
			} catch (Exception e) {
				e.printStackTrace();
				fail(e.getMessage());
			}
		}
	}

	private List<ExpectedValues> createTestSet() {
		List<ExpectedValues> testSet = new ArrayList<ExpectedValues>();

		testSet.add(new ExpectedValues()
				.setFile(getFileFromTestResources("testset-UKR/1/1.cpp"))
				.setBytesLength(2418)
				.setBytesHex(
						"23 69 6E 63 6C 75 64 65 3C 69 6F 73 74 72 65 61 6D 3E 0D 0A 23 69 6E 63 6C 75 64 65 3C 73 74 64 69 6F 2E 68 3E 0D 0A 23 70 72 61 67 6D 61 20 77 61 72 6E 69 6E 67 20 28 64 69 73 61 62 6C 65 3A 20 34 39 39 36 29 0D 0A 75 73 69 6E 67 20 6E 61 6D 65 73 70 61 63 65 20 73 74 64 3B 0D 0A 46 49 4C 45 20 2A 64 61 74 61 2C 20 2A 6F 75 74 70 75 74 3B 2F 2F EF EE EA E0 E7 F7 E8 EA E8 20 ED E0 20 E2 F5 B3 E4 ED E8 E9 20 F2 E0 20 E2 E8 F5 B3 E4 ED E8 E9 20 F4 E0 E9 EB E8 0D 0A 63 68 61 72 20 69 6E 6E 61 6D 65 5B 32 30 5D 2C 20 6F 75 74 6E 61 6D 65 5B 32 30 5D 3B 2F 2F ED E0 E7 E2 E8 20 E2 F5 B3 E4 ED EE E3 EE 20 F2 E0 20 E2 E8 F5 B3 E4 ED EE E3 EE 20 F4 E0 E9 EB B3 E2 0D 0A 69 6E 74 20 6D 73 75 6D 5B 31 30 30 5D 5B 31 30 30 5D 3B 0D 0A 69 6E 74 20 6D 69 6E 74 5B 31 30 30 5D 5B 31 30 30 5D 3B 0D 0A 69 6E 74 20 6E 2C 20 6D 3B 0D 0A 76 6F 69 64 20 77 6F 72 6B 28 29 3B 0D 0A 76 6F 69 64 20 76 69 64 70 28 29 3B 0D 0A 76 6F 69 64 20 69 6E 74 65 6E 64 28 29 3B 0D 0A 69 6E 6C 69 6E 65 20 76 6F 69 64 20 73 75 6D 69 73 28 69 6E 74 20 69 31 2C 20 69 6E 74 20 6A 31 29 3B 0D 0A 76 6F 69 64 20 69 6E 74 65 6E 64 28 69 6E 74 20 69 31 2C 20 69 6E 74 20 6A 31 2C 20 69 6E 74 20 6C 31 29 3B 0D 0A 76 6F 69 64 20 66 69 6C 65 77 72 69 74 65 31 28 29 3B 0D 0A 76 6F 69 64 20 66 69 6C 65 77 72 69 74 65 32 28 29 3B 0D 0A 69 6E 74 20 6D 61 69 6E 28 29 0D 0A 7B 0D 0A 09 63 6F 75 74 20 3C 3C 20 22 4C 61 62 6F 72 61 74 6F 72 79 20 77 6F 72 6B 20 23 31 20 27 44 65 6D 6F 6E 73 74 72 61 74 69 6F 6E 20 6F 66 20 67 72 61 70 68 73 27 22 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 77 6F 72 6B 28 29 3B 0D 0A 09 66 69 6C 65 77 72 69 74 65 31 28 29 3B 0D 0A 09 66 69 6C 65 77 72 69 74 65 32 28 29 3B 0D 0A 09 73 79 73 74 65 6D 28 22 70 61 75 73 65 22 29 3B 0D 0A 7D 0D 0A 76 6F 69 64 20 77 6F 72 6B 28 29 0D 0A 7B 0D 0A 09 63 6F 75 74 20 3C 3C 20 22 49 6E 70 75 74 20 6E 61 6D 65 20 6F 66 20 79 6F 75 72 20 64 61 74 61 20 66 69 6C 65 21 22 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 63 69 6E 20 3E 3E 20 69 6E 6E 61 6D 65 3B 0D 0A 09 64 61 74 61 20 3D 20 66 6F 70 65 6E 28 69 6E 6E 61 6D 65 2C 20 22 72 22 29 3B 0D 0A 09 69 66 20 28 64 61 74 61 20 3D 3D 20 4E 55 4C 4C 29 0D 0A 09 09 63 6F 75 74 20 3C 3C 20 22 46 69 6C 65 20 6E 6F 74 20 66 6F 75 6E 64 21 22 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 65 6C 73 65 0D 0A 09 09 76 69 64 70 28 29 3B 0D 0A 7D 0D 0A 76 6F 69 64 20 76 69 64 70 28 29 0D 0A 7B 0D 0A 09 69 6E 74 20 69 2C 20 6A 3B 0D 0A 09 63 68 61 72 20 6E 75 6D 62 5B 31 30 5D 3B 0D 0A 09 66 67 65 74 73 28 6E 75 6D 62 2C 20 31 30 2C 20 64 61 74 61 29 3B 0D 0A 09 73 73 63 61 6E 66 28 6E 75 6D 62 2C 20 22 25 64 20 25 64 22 2C 20 26 6E 2C 20 26 6D 29 3B 0D 0A 09 66 6F 72 20 28 69 6E 74 20 6C 20 3D 20 30 3B 20 6C 20 3C 20 6E 3B 20 6C 2B 2B 29 0D 0A 09 7B 0D 0A 09 09 66 6F 72 20 28 69 6E 74 20 73 20 3D 20 30 3B 20 73 20 3C 20 6E 3B 20 73 2B 2B 29 0D 0A 09 09 7B 0D 0A 09 09 09 6D 73 75 6D 5B 6C 5D 5B 73 5D 20 3D 20 30 3B 0D 0A 09 09 7D 0D 0A 09 09 63 6F 75 74 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 7D 0D 0A 09 66 6F 72 20 28 69 6E 74 20 6C 20 3D 20 30 3B 20 6C 20 3C 20 6D 3B 20 6C 2B 2B 29 0D 0A 09 7B 0D 0A 09 09 66 67 65 74 73 28 6E 75 6D 62 2C 20 31 30 2C 20 64 61 74 61 29 3B 0D 0A 09 09 73 73 63 61 6E 66 28 6E 75 6D 62 2C 20 22 25 64 20 25 64 22 2C 20 26 69 2C 20 26 6A 29 3B 0D 0A 09 09 73 75 6D 69 73 28 69 2C 20 6A 29 3B 0D 0A 09 09 69 6E 74 65 6E 64 28 69 2C 20 6A 2C 20 6C 29 3B 0D 0A 09 7D 0D 0A 09 66 6F 72 20 28 69 6E 74 20 6C 20 3D 20 30 3B 20 6C 20 3C 20 6E 3B 20 6C 2B 2B 29 0D 0A 09 7B 0D 0A 09 09 66 6F 72 20 28 69 6E 74 20 73 20 3D 20 30 3B 20 73 20 3C 20 6E 3B 20 73 2B 2B 29 0D 0A 09 09 7B 0D 0A 09 09 09 63 6F 75 74 20 3C 3C 20 6D 73 75 6D 5B 6C 5D 5B 73 5D 3B 0D 0A 09 09 7D 0D 0A 09 09 63 6F 75 74 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 7D 0D 0A 09 66 6F 72 20 28 69 6E 74 20 6C 20 3D 20 30 3B 20 6C 20 3C 20 6E 3B 20 6C 2B 2B 29 0D 0A 09 7B 0D 0A 09 09 66 6F 72 20 28 69 6E 74 20 73 20 3D 20 30 3B 20 73 20 3C 20 6D 3B 20 73 2B 2B 29 0D 0A 09 09 7B 0D 0A 09 09 09 63 6F 75 74 20 3C 3C 20 6D 69 6E 74 5B 6C 5D 5B 73 5D 3B 0D 0A 09 09 7D 0D 0A 09 09 63 6F 75 74 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 7D 0D 0A 09 66 63 6C 6F 73 65 28 64 61 74 61 29 3B 0D 0A 7D 0D 0A 69 6E 6C 69 6E 65 20 76 6F 69 64 20 73 75 6D 69 73 28 69 6E 74 20 69 31 2C 20 69 6E 74 20 6A 31 29 0D 0A 7B 0D 0A 09 6D 73 75 6D 5B 69 31 20 2D 20 31 5D 5B 6A 31 20 2D 20 31 5D 20 3D 20 31 3B 0D 0A 7D 0D 0A 76 6F 69 64 20 69 6E 74 65 6E 64 28 69 6E 74 20 69 31 2C 20 69 6E 74 20 6A 31 2C 20 69 6E 74 20 6C 31 29 0D 0A 7B 0D 0A 09 69 66 20 28 69 31 20 3D 3D 20 6A 31 29 0D 0A 09 09 6D 69 6E 74 5B 69 31 2D 31 5D 5B 6C 31 2D 31 5D 20 3D 20 32 3B 0D 0A 09 65 6C 73 65 0D 0A 09 7B 0D 0A 09 09 6D 69 6E 74 5B 69 31 2D 31 5D 5B 6C 31 2D 31 5D 20 3D 20 2D 31 3B 0D 0A 09 09 6D 69 6E 74 5B 6A 31 2D 31 5D 5B 6C 31 2D 31 5D 20 3D 20 31 3B 0D 0A 09 7D 0D 0A 7D 0D 0A 76 6F 69 64 20 66 69 6C 65 77 72 69 74 65 31 28 29 0D 0A 7B 0D 0A 09 63 68 61 72 20 66 69 6C 65 6E 61 6D 65 5B 32 30 5D 3B 0D 0A 09 63 6F 75 74 20 3C 3C 20 22 45 6E 74 65 72 20 6E 61 6D 65 20 6F 66 20 66 69 6C 65 20 66 6F 72 20 63 6F 6D 70 65 69 72 20 74 61 62 6C 65 22 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 63 69 6E 20 3E 3E 20 66 69 6C 65 6E 61 6D 65 3B 0D 0A 09 6F 75 74 70 75 74 20 3D 20 66 6F 70 65 6E 28 66 69 6C 65 6E 61 6D 65 2C 20 22 77 22 29 3B 0D 0A 09 69 66 20 28 6F 75 74 70 75 74 20 3D 3D 20 4E 55 4C 4C 29 0D 0A 09 09 63 6F 75 74 20 3C 3C 20 22 45 72 72 6F 72 20 6F 66 20 66 69 6C 65 20 63 72 65 61 74 69 6E 67 21 22 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 65 6C 73 65 0D 0A 09 7B 0D 0A 09 09 66 6F 72 20 28 69 6E 74 20 6C 20 3D 20 30 3B 20 6C 20 3C 20 6E 3B 20 6C 2B 2B 29 0D 0A 09 09 7B 0D 0A 09 09 09 66 6F 72 20 28 69 6E 74 20 73 20 3D 20 30 3B 20 73 20 3C 20 6E 3B 20 73 2B 2B 29 0D 0A 09 09 09 7B 0D 0A 09 09 09 09 66 70 72 69 6E 74 66 28 6F 75 74 70 75 74 2C 20 22 25 64 22 2C 20 6D 73 75 6D 5B 6C 5D 5B 73 5D 29 3B 0D 0A 09 09 09 7D 0D 0A 09 09 09 66 70 75 74 63 28 27 5C 6E 27 2C 20 6F 75 74 70 75 74 29 3B 0D 0A 09 09 7D 0D 0A 09 09 66 63 6C 6F 73 65 28 6F 75 74 70 75 74 29 3B 0D 0A 09 7D 0D 0A 7D 0D 0A 76 6F 69 64 20 66 69 6C 65 77 72 69 74 65 32 28 29 0D 0A 7B 0D 0A 09 63 68 61 72 20 66 69 6C 65 6E 61 6D 65 5B 32 30 5D 3B 0D 0A 09 63 6F 75 74 20 3C 3C 20 22 45 6E 74 65 72 20 6E 61 6D 65 20 6F 66 20 66 69 6C 65 20 66 6F 72 20 69 6E 74 65 6E 64 65 6E 74 20 74 61 62 6C 65 22 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 63 69 6E 20 3E 3E 20 66 69 6C 65 6E 61 6D 65 3B 0D 0A 09 6F 75 74 70 75 74 20 3D 20 66 6F 70 65 6E 28 66 69 6C 65 6E 61 6D 65 2C 20 22 77 22 29 3B 0D 0A 09 69 66 20 28 6F 75 74 70 75 74 20 3D 3D 20 4E 55 4C 4C 29 0D 0A 09 09 63 6F 75 74 20 3C 3C 20 22 45 72 72 6F 72 20 6F 66 20 66 69 6C 65 20 63 72 65 61 74 69 6E 67 21 22 20 3C 3C 20 65 6E 64 6C 3B 0D 0A 09 65 6C 73 65 0D 0A 09 7B 0D 0A 09 09 66 6F 72 20 28 69 6E 74 20 6C 20 3D 20 30 3B 20 6C 20 3C 20 6E 3B 20 6C 2B 2B 29 0D 0A 09 09 7B 0D 0A 09 09 09 66 6F 72 20 28 69 6E 74 20 73 20 3D 20 30 3B 20 73 20 3C 20 6D 3B 20 73 2B 2B 29 0D 0A 09 09 09 7B 0D 0A 09 09 09 09 66 70 72 69 6E 74 66 28 6F 75 74 70 75 74 2C 20 22 25 64 22 2C 20 6D 69 6E 74 5B 6C 5D 5B 73 5D 29 3B 0D 0A 09 09 09 7D 0D 0A 09 09 09 66 70 75 74 63 28 27 5C 6E 27 2C 20 6F 75 74 70 75 74 29 3B 0D 0A 09 09 7D 0D 0A 09 09 66 63 6C 6F 73 65 28 6F 75 74 70 75 74 29 3B 0D 0A 09 7D 0D 0A 7D"));

		return testSet;
	}

	private File getFileFromTestResources(String filePath) {
		ClassLoader classLoader = getClass().getClassLoader();
		File file = new File(classLoader.getResource(filePath).getFile());
		return file;
	}

}
